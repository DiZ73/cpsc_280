Lesson today is in Git and : https://gitlab.pcs.cnu.edu

----> The gitlabs will make a reopsitory tha tyou will be added to as a master.

This is for the exercise that we do in class:
JUnit Coverage and finding bugs:
  
  public class Hurricane {
    private String name;
    private int category;
    
    public Hurricane(String name) {
      this.name = name;
      this.category = 1;
    }
    
    public String getName() {
      return this.name;
    }
    
    public int getCategory() {
      return this.category;
    }
    
    public void increment() {
      if (category < 5) category += 1; 
    }
    
    public void decrement() {
      if (category > 0) category -= 1;
    }
    
    @Override
    public boolean equals(Object h) {
      if (h instanceof Hurricane) {
    	  Hurricane o = (Hurricane) h;
        return (this.name.equals(o.getName()));
      } else {
        return false;
      }
    }
    
    public int hashCode() {
    	return this.name.hashCode();
    }
}


We had to write a JUnit test for this to practice maximizing coverage of the program in that case.
Though this we could more easily find bugs. So the testcases are below.

import static org.junit.Assert.*;

import org.junit.Test;

public class HurricaneTest {

	@Test
	public void test1() {
		Hurricane h = new Hurricane("Test Hurricane");
		String thisname = h.getName();
		int thisint = h.getCategory();
		assertEquals("Test Hurricane", thisname);
		assertEquals(1, thisint);
		
		h.increment();
		assertEquals(2, h.getCategory());
		h.increment();
		assertEquals(3, h.getCategory());
		h.increment();
		assertEquals(4, h.getCategory());
		h.increment();
		assertEquals(5, h.getCategory());
		h.increment();
		assertEquals(5, h.getCategory());
		
		h.decrement();
		assertEquals(4, h.getCategory());
		h.decrement();
		assertEquals(3, h.getCategory());
		h.decrement();
		assertEquals(2, h.getCategory());
		h.decrement();
		assertEquals(1, h.getCategory());
		h.decrement();
		assertEquals(0, h.getCategory());
		h.decrement();
		assertEquals(0, h.getCategory());
		
	}
	
	@Test
	public void test2() {
		Hurricane h = new Hurricane("name");
		Hurricane h_same = new Hurricane("name");
		Hurricane d = new Hurricane("dill");
		String s = new String("name");
		assertFalse(h.equals(s));
		assertTrue(h.equals(h_same));
		assertFalse(h.equals(d));
	}
	
	@Test
	public void test3() {
		Hurricane h = new Hurricane("Hello");
		int hash = h.hashCode();
		assertEquals(hash, h.hashCode());
	}
}


This was the exercise we did for the class.

